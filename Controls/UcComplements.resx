<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbImage.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AChA0AGggP8DGtF73UJoPPcAAAAASUVORK5CYII=
</value>
  </data>
</root>