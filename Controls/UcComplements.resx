<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbImage.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>